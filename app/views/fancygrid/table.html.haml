.fg-datawrapper{ :class => "fg-#{fancygrid.name}"}
  %table.fg-datacontainer{ :class => fancygrid.table_class, :id => fancygrid.table_id }
    %tr.fg-header
      - fancygrid.visible_columns.each do |column|
        %th{ :class => column.tag_class + (column.searchable ? " fg-orderable" : ""), :"fg-identifier" => column.identifier, :"fg-sort-order" => column.sort_order }
          .fg-head-wrapper.fg-order-tag
            = column.human_name
    - if fancygrid.simple_search?
      %tr.fg-search
        - fancygrid.visible_columns.each do |column|
          %td{ :class => column.tag_class }
            - next unless column.searchable
            .fg-search-criterion
              = hidden_field_tag(:identifier, column.identifier)
              = hidden_field_tag(:operator, fancygrid.search_operator)
              - if column.search_options
                = select_tag(:value, options_from_collection_for_select(column.search_options, :last, :first), :selected => column.search_value)
              - else
                = text_field_tag(:value, column.search_value)

    - count = 1
    - fancygrid.records.each do |record|
      - count = 1 - count
      %tr.fg-row{ :class => fancygrid.tr_class(record).to_s + " " + (count == 1 ? "odd" : "even"), :id => fancygrid.tr_id(record) }
        - fancygrid.visible_columns.each do |column|
          %td{ :class => column.tag_class.to_s + " " + fancygrid.td_class(record).to_s, :id => fancygrid.td_id(record) }
            = render_fancygrid_cell(record, column, &format_block)
